<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title>Netveldi</title>
  <link rel="self" href="/feed.atom"/>
  <updated>2024-11-18T11:57:58Z</updated>
  <author>
    <name>Matth√≠as Ragnarsson</name>
    <email>matt@netveldi.com</email>
    <uri>https://www.netveldi.com/about</uri>
  </author>
  <id>https://www.netveldi.com/</id>
  
  <entry>
    <title>Update #5</title>
    <link rel="alternate" href="/updates/5"/>
    <id>https://www.netveldi.com/updates/5</id>
    <published>2024-11-18</published>
    <updated>2024-11-18</updated>
    <summary>
      <div xmlns="http://www.w3.org/1999/xhtml">
        <ul>
            <li>Added an atom feed for the frontpage of each language version of this page in the footer.</li>
        </ul>
      </div>
    </summary>
    <content type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
        <ul>
            <li>Added an atom feed for the frontpage of each language version of this page in the footer.</li>
        </ul>
      </div>
    </content>
  </entry>
  <entry>
    <title>Random password memorization with PAO</title>
    <link rel="alternate" href="/articles/random-password-memorization-with-pao"/>
    <id>https://www.netveldi.com/articles/random-password-memorization-with-pao</id>
    <published>2024-11-11</published>
    <updated>2024-11-11</updated>
    <summary>
      <div xmlns="http://www.w3.org/1999/xhtml">
        <p>As a person who's quite interested in information security, I like to play mental games that involve the imagination of threats and how one could establish and improve one's defenses against them in case they materialize. One important case to consider is: What would happen if one loses all one's possessions to the point of being practically naked in the street or wherever. In this case, all of our data outside of our minds, be they digital or written, would disappear. We want to make sure that the response to this question is that nothing would happen and that we would stoically continue on like a recently arrived Terminator. Normally it's possible to leave data backups with third parties, but here I talk in the context of individuals that want maximum security, where they are the only ones that should have the power to access the contained data. This case requires the encryption of the data with a random password that is difficult to remember without memory techniques. To this purpose I dedicate this article where I explain my application of the <a href="https://artofmemory.com/blog/pao-system/">PAO</a> memory technique for readable <a href="https://en.wikipedia.org/wiki/ASCII">ASCII</a> symbols.</p>
      </div>
    </summary>
    <content type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
        <p>As a person who's quite interested in information security, I like to play mental games that involve the imagination of threats and how one could establish and improve one's defenses against them in case they materialize. One important case to consider is: What would happen if one loses all one's possessions to the point of being practically naked in the street or wherever. In this case, all of our data outside of our minds, be they digital or written, would disappear. We want to make sure that the response to this question is that nothing would happen and that we would stoically continue on like a recently arrived Terminator. Normally it's possible to leave data backups with third parties, but here I talk in the context of individuals that want maximum security, where they are the only ones that should have the power to access the contained data. This case requires the encryption of the data with a random password that is difficult to remember without memory techniques. To this purpose I dedicate this article where I explain my application of the <a href="https://artofmemory.com/blog/pao-system/">PAO</a> memory technique for readable <a href="https://en.wikipedia.org/wiki/ASCII">ASCII</a> symbols.</p>
        <p>More than 10 years ago, when I was in the university, I became intrigued about the way memory works which was prompted by my initial interest in passing exams. I learned about <a href="https://en.wikipedia.org/wiki/Mind_map">mind maps</a>, but what I was impacted by the most was the book <i>You can have an Amazing Memory</i> by Dominic O'Brien. After reading it and acquiring the capability of memorizing exact sequences of two decks of cards in less than 10 minutes, I felt greatly empowered and I understood better the potential of human memory. It is rather weird that they didn't teach us such memory techniques at school seeing that they would have made many things easier.</p>
        <p>I'm now going to explain my use of the PAO technique. Following this technique, I have encoded all of the 94 readable symbols of ASCII of which my passwords consist:</p>
        <code>! " # $ % & ' ( ) * + , - . / 0 1 2 3 4 5 6 7 8 9 : ; < = > ? @ A B C D E F G H I J K L M N O P Q R S T U V W X Y Z [ \ ] ^ _ ` a b c d e f g h i j k l m n o p q r s t u v w x y z { | } ~</code>
        <p>Every one of these symbols are encoded according to the PAO method: As a person, action and object. For example, the "H" is encoded as Harry Potter (person) flying mounted on (action) a broom (object). To more easily remember the alphabet, each letter is the first letter of the name of the person ("H" for Harry). There are uppercase and lowercase letters, and to differentiate between them I decided that the people linked to uppercase letters be men and the people linked to lowercase letters be women. This organization also helps with maintaining balance between the quantity of each gender. Each digit and symbol that is not a letter has a certain form that reminds me of the linked person, for example "8" looks like a "snowman". There are twin symbols that I often keep within the same theme, for example "{" is "Batman" and "}" is "Alfred", his assistant.</p>
        <p>It took me a good amount of time to create the encodings. To create 94 people, 94 actions and 94 objects requires certain creativity, and one also has to take care that each person, action and object are not too similar to other people, actions and objects. This is to not get confused in the moment of remembering what we have memorized. We must remember one specific thing and not have multiple possible interpretations of what the thing could be. It can appear more difficult to come up with unique actions, but it is good to remember that an action can be more complex than one verb. For example "beats" can become "beats with a plate". There is an object in that action in this case and we must try to not have other actions or objects include "plate" as well. In order to be able to mentally use the encoding requires some practice in memorizing sequences of symbols with it, and that way it will be possible to conclude more rapidly to what person, object and action a symbol refers and vice versa.</p>
        <p>To memorize sequences of symbols, according to PAO, I imagine every combination of three symbols in places that I visit in an imaginary journey. It is possible to use places that one knows from real life or purely fictional places. For example if I am going to memorize the sequence "H}pA=3", I have two scenes to memorize: Harry Potter (H) revealing on a waiter's tray (}: Alfred from Batman) dirty clothes (p: Penny from the Big Bang Theory) and Aladdin (A) eating (=: Garfield) a <a href="https://en.wikipedia.org/wiki/Cylon">cylon robot</a> (3: <a href="https://en.wikipedia.org/wiki/Number_Six_(Battlestar_Galactica)">Cylon number six</a>). I imagine the first scene in front of my house and the other in the street by the side of my house. Normally the passwords that we want to memorize are longer, maybe filling about 10 scenes. Sometimes the last scene only consists of one or two symbols and in that case I make the person stand on a hovering black disc when there is only one symbol and make the object be a black ball when there are just two symbols.</p>
        <p>Two years ago I made an encoding for pairs of digits from 00 to 99 where for example "86" is linked to "Homer Simpson". Each digit is linked with one letter, in the example "8" to "H" and "6" to "S", or "86" to "HS". "HS" becomes "Homer Simpson". Since it took me a while to fill up the 100 number pairs with people, objects and actions, I'm going to use that encoding in combination with the encoding that I explained before. That way the memorization becomes more compact for sequential digits, for example the sequence "adude54348976" with this encoding requires three combinations of person action and object (adu de54 348976) instead of five (adu de5 434 897 6). There are cases where it makes sense to use this shorter number encoding, but it is not necessary to use it of course.</p>
        <p>Using this memory technique to memorize random passwords is not enough to remember them long term. To do that it is necessary to mentally review and verify the password every once in a while. It is possible to use techniques like <a href="https://en.wikipedia.org/wiki/Spaced_repetition">spaced repetition</a> where the password is reviewed after one hour, later after 1 day, 1 week, 1 month, 3 months, 1 year and so on. It doesn't take much time to review it and thus one can do it more often without problems. It's good to remember that to memorize a password for the long term one should use an imaginary journey that will never be reused. In this case I prefer to use imaginary journeys through places where I haven't personally been to, even purely fictional places.</p>
        <p>The application of memory techniques is different for each person, but I hope that mine serves as an inspiration. It can seem like a lot of work to take up a technique, but I believe it is worth it for the long term for those that want to feel security within the uncertainty of the physical world. Of course we must keep in mind that this memory technique is only one of the necessary components to keep our data secure and recuperable at any time, but I believe it is one of the most important components. To practice memory techniques also has other benefits such as improved <a href="https://en.wikipedia.org/wiki/Fluid_and_crystallized_intelligence">fluid intelligence</a>. Personally I have noted improvement in my focus, mental clarity and I remember more of my dreams. Memory practice is also useful for memorizing other things aside from passwords since it is more generally applicable. I hope you enjoy if you decide to try it out.</p>
      </div>
    </content>
  </entry>
  <entry>
    <title>Update #4</title>
    <link rel="alternate" href="/updates/4"/>
    <id>https://www.netveldi.com/updates/4</id>
    <published>2024-10-28</published>
    <updated>2024-10-28</updated>
    <summary>
      <div xmlns="http://www.w3.org/1999/xhtml">
        <ul>
        <li>I find it important to continuously refine my laptop's security posture for myself and by extent the security of the projects that I work on for my clients. Recently I've been keeping an eye out for a new laptop. Last time I did so, in 2021, I ended up with a <a href="https://en.wikipedia.org/wiki/ThinkPad_X_series#X200_and_X200s">Thinkpad X200</a>. The reason I did was that it was one of the few available <a href="https://ryf.fsf.org/index.php/categories/laptops">RYF certified laptops</a> that <a href="https://libreboot.org/">Libreboot</a> could run on, and those laptops don't have any <a href="https://en.wikipedia.org/wiki/Intel_Management_Engine">Intel Management Engine</a> (a security concern) on their chips. One reason to look at other options is that the laptop shuts down due to overheating or freezes sometimes when it's working hard. I could put in time to try to fix it, but it'll be hard to reach 100% confidence that it doesn't turn off in important video calls. Another reason is to get a higher end CPU, GPU and RAM capacity for local AI training that I may want to do. I still got my <a href="https://www.thinkwiki.org/wiki/Category:T440s">Thinkpad T440s</a> for when it's important the computer doesn't crash. It's however not ideal for AI workloads, contains working IME and its firmware is locked with Intel Boot Guard so I can't replace it with a free alternative. Long-story short, I narrowed my laptop search down to <a href="https://novacustom.com/cat/custom-laptop/">NovaCustom</a>. They have the option of disabling the IME and run <a href="https://www.coreboot.org/">Coreboot</a> which seems like it could be an acceptable compromise. I want to try running <a href="https://www.openbsd.org/">OpenBSD</a> as my main OS (I'm currently on <a href="https://www.parabola.nu/">Parabola</a>) and I saw a positive <a href="https://dataswamp.org/~solene/2024-01-03-laptop-review-novacustom-nv41.html#_OpenBSD">review</a> on running OpenBSD on the NovaCustom NV41 laptop which bodes well. I'll mull this over some more before making a decision.</li>
        </ul>
      </div>
    </summary>
    <content type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
        <ul>
        <li>I find it important to continuously refine my laptop's security posture for myself and by extent the security of the projects that I work on for my clients. Recently I've been keeping an eye out for a new laptop. Last time I did so, in 2021, I ended up with a <a href="https://en.wikipedia.org/wiki/ThinkPad_X_series#X200_and_X200s">Thinkpad X200</a>. The reason I did was that it was one of the few available <a href="https://ryf.fsf.org/index.php/categories/laptops">RYF certified laptops</a> that <a href="https://libreboot.org/">Libreboot</a> could run on, and those laptops don't have any <a href="https://en.wikipedia.org/wiki/Intel_Management_Engine">Intel Management Engine</a> (a security concern) on their chips. One reason to look at other options is that the laptop shuts down due to overheating or freezes sometimes when it's working hard. I could put in time to try to fix it, but it'll be hard to reach 100% confidence that it doesn't turn off in important video calls. Another reason is to get a higher end CPU, GPU and RAM capacity for local AI training that I may want to do. I still got my <a href="https://www.thinkwiki.org/wiki/Category:T440s">Thinkpad T440s</a> for when it's important the computer doesn't crash. It's however not ideal for AI workloads, contains working IME and its firmware is locked with Intel Boot Guard so I can't replace it with a free alternative. Long-story short, I narrowed my laptop search down to <a href="https://novacustom.com/cat/custom-laptop/">NovaCustom</a>. They have the option of disabling the IME and run <a href="https://www.coreboot.org/">Coreboot</a> which seems like it could be an acceptable compromise. I want to try running <a href="https://www.openbsd.org/">OpenBSD</a> as my main OS (I'm currently on <a href="https://www.parabola.nu/">Parabola</a>) and I saw a positive <a href="https://dataswamp.org/~solene/2024-01-03-laptop-review-novacustom-nv41.html#_OpenBSD">review</a> on running OpenBSD on the NovaCustom NV41 laptop which bodes well. I'll mull this over some more before making a decision.</li>
        </ul>
      </div>
    </content>
  </entry>
  <entry>
    <title>Update #3</title>
    <link rel="alternate" href="/updates/3"/>
    <id>https://www.netveldi.com/updates/3</id>
    <published>2024-10-21</published>
    <updated>2024-10-21</updated>
    <summary>
      <div xmlns="http://www.w3.org/1999/xhtml">
        <ul>
            <li>Almost finished defining my <a href="https://artofmemory.com/blog/pao-system/">PAO memory system</a> for all readable <a href="https://en.wikipedia.org/wiki/ASCII">ASCII</a> characters. I'll use it to remember random ASCII passwords for my encrypted data backups. Been meaning to complete that for a while now. More on that later.</li>
            <li>Read chapter 11 of the <a href="https://doc.rust-lang.org/book/">Rust book</a>.</li>
        </ul>
      </div>
    </summary>
    <content type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
        <ul>
            <li>Almost finished defining my <a href="https://artofmemory.com/blog/pao-system/">PAO memory system</a> for all readable <a href="https://en.wikipedia.org/wiki/ASCII">ASCII</a> characters. I'll use it to remember random ASCII passwords for my encrypted data backups. Been meaning to complete that for a while now. More on that later.</li>
            <li>Read chapter 11 of the <a href="https://doc.rust-lang.org/book/">Rust book</a>.</li>
        </ul>
      </div>
    </content>
  </entry>
  <entry>
    <title>Update #2</title>
    <link rel="alternate" href="/updates/2"/>
    <id>https://www.netveldi.com/updates/2</id>
    <published>2024-10-14</published>
    <updated>2024-10-14</updated>
    <summary>
      <div xmlns="http://www.w3.org/1999/xhtml">
        <ul>
            <li>I went to a <a href="https://www.fjarskiptastofa.is/page/d50c3d79-28d3-4eee-8031-c92002c0db63">network security conference</a> of the <a href="https://www.fjarskiptastofa.is/english">Electronic Communications Office of Iceland</a>. I got some insight into what companies in Iceland are dealing with in that area nowadays as well as the new <a href="https://nis2directive.eu/what-is-nis2/">NIS2 EU directive</a> that they are expected to need to comply with. Disconnect between company leadership and their IT departments was a big topic and the need for deeper collaboration between them to improve the company's information security posture. I think IT people really benefit from knowledge of business administration in this regard. It lets them recognize the responsibilities and perspective of the leadership in order to effectively communicate security risks and lets the leadership take responsibility for them.</li>
            <li>I've been working more on my <a href="https://github.com/straumer/makesite">makesite</a> static site generator alongside the updating of this site which is generated with it. Among the reasons of making it is that I thought it would be a nice project to cement my knowledge of make, m4 and the shell. Those are pretty commonly used in C/C++ build systems of projects I'd like to participate in.</li>
            <li>I read chapters 6-10 of the <a href="https://doc.rust-lang.org/book/">Rust book</a>. I like that the book explains Rust's safety features in the context of languages like C, so it also can teach us how to manually apply similar safety practices when coding in those languages.</li>
        </ul>
      </div>
    </summary>
    <content type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
        <ul>
            <li>I went to a <a href="https://www.fjarskiptastofa.is/page/d50c3d79-28d3-4eee-8031-c92002c0db63">network security conference</a> of the <a href="https://www.fjarskiptastofa.is/english">Electronic Communications Office of Iceland</a>. I got some insight into what companies in Iceland are dealing with in that area nowadays as well as the new <a href="https://nis2directive.eu/what-is-nis2/">NIS2 EU directive</a> that they are expected to need to comply with. Disconnect between company leadership and their IT departments was a big topic and the need for deeper collaboration between them to improve the company's information security posture. I think IT people really benefit from knowledge of business administration in this regard. It lets them recognize the responsibilities and perspective of the leadership in order to effectively communicate security risks and lets the leadership take responsibility for them.</li>
            <li>I've been working more on my <a href="https://github.com/straumer/makesite">makesite</a> static site generator alongside the updating of this site which is generated with it. Among the reasons of making it is that I thought it would be a nice project to cement my knowledge of make, m4 and the shell. Those are pretty commonly used in C/C++ build systems of projects I'd like to participate in.</li>
            <li>I read chapters 6-10 of the <a href="https://doc.rust-lang.org/book/">Rust book</a>. I like that the book explains Rust's safety features in the context of languages like C, so it also can teach us how to manually apply similar safety practices when coding in those languages.</li>
        </ul>
      </div>
    </content>
  </entry>
  <entry>
    <title>Update #1</title>
    <link rel="alternate" href="/updates/1"/>
    <id>https://www.netveldi.com/updates/1</id>
    <published>2024-10-07</published>
    <updated>2024-10-07</updated>
    <summary>
      <div xmlns="http://www.w3.org/1999/xhtml">
        <ul>
            <li>Added Services and Updates sections to this site and updated the About section.</li>
            <li>I decided to learn <a href="https://www.rust-lang.org/">Rust</a> programming, since I would like to participate in various projects that use it. Finished reading chapters 1-5 of the <a href="https://doc.rust-lang.org/book/">Rust book</a>.</li>
        </ul>
      </div>
    </summary>
    <content type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
        <ul>
            <li>Added Services and Updates sections to this site and updated the About section.</li>
            <li>I decided to learn <a href="https://www.rust-lang.org/">Rust</a> programming, since I would like to participate in various projects that use it. Finished reading chapters 1-5 of the <a href="https://doc.rust-lang.org/book/">Rust book</a>.</li>
        </ul>
      </div>
    </content>
  </entry>
  <entry>
    <title>Free software comes first</title>
    <link rel="alternate" href="/articles/free-software-comes-first"/>
    <id>https://www.netveldi.com/articles/free-software-comes-first</id>
    <published>2024-09-18</published>
    <updated>2024-09-18</updated>
    <summary>
      <div xmlns="http://www.w3.org/1999/xhtml">
        <p>All of us use electronic equipment to interact and let information flow between us for our benefit. The more we depend on that equipment in our activities, the more important it is to understand some fundamental aspects of the digital world in order to stay empowered in the long run. One very important aspect, the one I talk about in this article, has to do with our choice of software with respect to its license and the accessibility of its source code. Software includes applications, operating systems and other digital tools. Once we are concious of certain human dynamics in the creation of software, we can adopt principles and practices to live more empowered. This article is for users of software, not software developers, but it is necessary to mention important points from the perspective of the software developer in order to better choose our software.</p>
      </div>
    </summary>
    <content type="xhtml">
      <div xmlns="http://www.w3.org/1999/xhtml">
        <p>All of us use electronic equipment to interact and let information flow between us for our benefit. The more we depend on that equipment in our activities, the more important it is to understand some fundamental aspects of the digital world in order to stay empowered in the long run. One very important aspect, the one I talk about in this article, has to do with our choice of software with respect to its license and the accessibility of its source code. Software includes applications, operating systems and other digital tools. Once we are concious of certain human dynamics in the creation of software, we can adopt principles and practices to live more empowered. This article is for users of software, not software developers, but it is necessary to mention important points from the perspective of the software developer in order to better choose our software.</p>
        <p>In the case of digital electronic devices such as a laptop or a cellphone, we call their physical part hardware. The hardware stores and works with data in a variety of ways and each fundamental element of the data has two possible states which we normally label 1 and 0. Software is data which instructs the hardware to function in certain ways. One important difference between the hardware and software is that it is possible to copy the software and distribute copies of it practically without any cost, while the hardware is physical and not copiable without spending much energy and materials.</p> 
        <p>Typically, the software has a license in the form of a legal text that says what you can and cannot do with it. These licenses are enforced by governmental entities. When licenses restrict the use of the software, these restrictions tend to limit the actions of those who want to develop or reuse the software. For example, a license can say that no one except the proprietors of the software can modify, distribute or redistribute modified versions of the software. Other users of the software usually are not affected directly by those restrictions, but they are affected indirectly. When users choose software, they are also choosing who can be a developer of the software or who can reuse parts of the software in the future and in what way, in what circumstances and for what purpose etcetera.</p>
        Software has two representations: source code which is written in a language that is more easily understood by humans, and the machine code which instructs the behavior of the hardware. The source code goes through the process of compilation which transforms it to machine code. It is possible to directly understand and update the machine code, but that process is much more tedious and there are few people who know how to do it well. Furthermore, that form of the software runs on only one type of processor, and the hardware can contain different types of processors. In contrast, one can compile the source code for any kind of processor where the software must run. Sometimes the software is provided as a web service where it only runs on the hardware of third parties and is accessible through a browser or some other application. In that case it is impossible for developers apart from the third parties themselves to update or reuse the software if the third parties don't share its source code or machine code.
        <p>We now return to the question of what kind of software is better to choose for empowered users considering both its license and who has access to its source code. The license and access to the source code determines what developers can do what with the software. The nature of the software and its future updates are affected by those that develop it. Then the question becomes what kinds of developers with what motives empower us more with their development of the software today and in the future.</p>
        <p>Let's consider developers that create a license that does not permit anyone except themselves to develop the software and do not permit anyone else to see or modify the source code. Although it practically does not cost them anything to let others develop or reuse the software with a more permissible license and access to the source code, the most common motive to not do it is economic. Giving themselves the only right to develop or reuse the software, they can keep it exactly how they want, including requiring users to pay them for obtaining copies and using it. That practice makes more sense for hardware copies because to create an exact physical copy of hardware has a cost, but the cost of copying software is practically zero. They can also make the users pay in different ways, some examples being to make the software show advertisements or gather information about the user (plainly said espionage). Without sharing the source code, it is also easier to hide malicious functions in the software and the developers often complicate the software and make it less efficient in order to prevent copying or illegal modifications of it. Software with such licenses and unavailable source code is called proprietary software.</p>
        <p>In contrast are the developers that share the software's source code and use permissible licenses that basically permit everyone to develop and reuse the software without any conditions. Those developers recognize the zero cost of distributing copies of the source code and don't create artificial restrictions for their benefit. Often they develop the software voluntarily for others or for themselves as users of the software. Sometimes they work at companies that need the software to work well and develop it for that reason. They can also accept payments for creating updates to the software. Software with licenses like that and accessible source code is called free software.</p>
        <p>Let's suppose we are about to choose between proprietary software and free software to perform certain activities and the free software can perform them adequately. Let's suppose also that we are going to invest much time into learning to use the chosen software expertly. The option that empowers us more must be the free software because it does not require as much of our trust in the creators of the software. We don't need to trust in that they won't raise the cost of the software or that they don't change it in some way for economic motives to extract more value from the user because that motive doesn't exist. It requires less trust in that the developer doesn't hide malicious functionality in the software because the source code provides more transparency and there are other developers and technical people that can review the code. There is also less risk of bad investment in learning how to use the software because we don't need to trust that the economic motives of the developers won't make the software worse or make it cost more. The final point is that free software is more our own. We the users control the software that the developers create and not in reverse. Maybe we don't develop it ourselves, but we have the power to do it or to get someone else to do it that knows how to, if necessary.</p>
        <p>In conclusion, to be empowered in our choice of software with respect to its license and its accessibility to its source code, it is better to prioritize free software, then less restricted software and finally proprietary software.</p>
      </div>
    </content>
  </entry>

</feed>
